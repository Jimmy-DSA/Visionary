/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/glasses.glb --types 
Author: Andrea Munegato 3D (https://sketchfab.com/andreamunegato)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/glasses-bed4643c801b4a0581333489a5e0b3ea
Title: Glasses
*/

import * as THREE from "three";
import React, { JSX, useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

KHRMater;

type GLTFResult = GLTF & {
  nodes: {
    Mesh__Base1_0: THREE.Mesh;
    Mesh__Glasses1_0: THREE.Mesh;
    Mesh__Glasses_Side1_0: THREE.Mesh;
    Mesh__T1_0: THREE.Mesh;
    Mesh__nose1_0: THREE.Mesh;
    Mesh__Steel1_0: THREE.Mesh;
  };
  materials: {
    Base1: THREE.MeshStandardMaterial;
    Glasses1: THREE.MeshStandardMaterial;
    Glasses_Side1: THREE.MeshStandardMaterial;
    material: THREE.MeshStandardMaterial;
    nose1: THREE.MeshStandardMaterial;
    Steel1: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/glasses.glb") as unknown as GLTFResult;

  useEffect(() => {
    // Converta os materiais para metalness/roughness
    Object.values(materials).forEach((material) => {
      if (material.specular || material.glossiness) {
        material.roughness = material.glossiness || 0.5;
        material.metalness = material.specular
          ? 1 - material.specular.getHex() / 0xffffff
          : 0;
        delete material.specular;
        delete material.glossiness;
      }
    });
  }, [materials]);
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Mesh__Base1_0.geometry}
        material={materials.Base1}
      />
      <mesh
        geometry={nodes.Mesh__Glasses1_0.geometry}
        material={materials.Glasses1}
      />
      <mesh
        geometry={nodes.Mesh__Glasses_Side1_0.geometry}
        material={materials.Glasses_Side1}
      />
      <mesh
        geometry={nodes.Mesh__T1_0.geometry}
        material={materials.material}
      />
      <mesh
        geometry={nodes.Mesh__nose1_0.geometry}
        material={materials.nose1}
      />
      <mesh
        geometry={nodes.Mesh__Steel1_0.geometry}
        material={materials.Steel1}
      />
    </group>
  );
}

useGLTF.preload("/glasses.glb");
